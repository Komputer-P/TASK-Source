{"ast":null,"code":"import _objectSpread from\"C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import DaydoItemList from'./DaydoItemList';import DaydoForm from'./DaydoForm';import'./DaydoListTemplate.css';import DaydoSlider from'./DaydoSlider';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var DayDoListTemplate=function DayDoListTemplate(_ref){var darkTheme=_ref.darkTheme;var today=new Date();var _useState=useState([]),_useState2=_slicedToArray(_useState,2),allDaydoItemList=_useState2[0],setAllDaydoItemList=_useState2[1];var _useState3=useState([]),_useState4=_slicedToArray(_useState3,2),daydoItemList=_useState4[0],setDaydoItemList=_useState4[1];var _useState5=useState(''),_useState6=_slicedToArray(_useState5,2),formInput=_useState6[0],setFormInput=_useState6[1];var _useState7=useState(false),_useState8=_slicedToArray(_useState7,2),fetched=_useState8[0],setFetched=_useState8[1];var _useState9=useState(today.getDay()),_useState10=_slicedToArray(_useState9,2),day=_useState10[0],setDay=_useState10[1];// 설정의 요일별 할 일 목록의 세팅되어 있는 요일 (기본 월요일 설정)\nuseEffect(function(){// 다크 모드 \nconsole.log();var inputs=document.querySelectorAll('input');if(darkTheme){inputs.forEach(function(input){return input.classList.add('dark');});}else{inputs.forEach(function(input){return input.classList.remove('dark');});}});// FETCH - GET\nuseEffect(function(){// 서버로부터 모든 요일의 Daydo 목록 가져오기\nif(!fetched){fetch('http://localhost:8080/api/daydo').then(function(response){return response.json();}).then(function(items){console.log(\"서버로부터 모든 요일별 Daydo 목록 가져옴: \",items);setFetched(true);setAllDaydoItemList(items);});}// 초기로 설정되어 있는 요일에 해당하는 요일별 할 일 목록 생성\n// !! Java에서 day = 1 ~ 7 : 월요일 ~ 일요일 | JavaScript에서 day = 0 ~ 6 : 일요일 ~ 토요일\nvar defaultDaydoItemList=allDaydoItemList.filter(function(daydoItem){if(day===0){return daydoItem.day===7;}else{return daydoItem.day===day;}});setDaydoItemList(defaultDaydoItemList);},[fetched,allDaydoItemList,day]);// CREATE - POST \nfunction handleCreate(){// Form 안의 내용을 초기화\nsetFormInput('');// 서버로 보낼 객체 아이템 생성\nvar newDaydoItem={content:formInput,day:day};// POST 방식으로 서버 전송\nfetch('http://localhost:8080/api/daydo',{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(newDaydoItem)})// 서버에서 받은 응답을 객체화 후, DaydoItemList에 추가 (컴포넌트 re-render됨)\n.then(function(response){return response.json();}).then(function(newDaydoItem){console.log(\"새 Todo 아이템 생성됨: \",newDaydoItem);setDaydoItemList([].concat(_toConsumableArray(daydoItemList),[newDaydoItem]));});// 서버에서 다시 목록 가져오기\nsetFetched(false);}// REMOVE - DELETE\nfunction handleRemove(id){// 서버와 클라이언트 따로따로 처리됨\nvar updatedDaydoItemList=daydoItemList.filter(function(daydoItem){return daydoItem.id!==id;});//서버\nfetch(\"http://localhost:8080/api/daydo/\".concat(id),{method:'DELETE',headers:{'content-type':'application/json'}}).then(function(response){return response.json();}).then(function(deletedId){console.log(\"ID:\",deletedId,\" 삭제됨\");});// 클라이언트\nsetDaydoItemList(updatedDaydoItemList);// 서버에서 다시 목록 가져오기\nsetFetched(false);}// UPDATE (content) - PUT\nfunction handleDaydoInputChange(e,id){// 서버와 클라이언트 따로따로 처리됨\nvar index=daydoItemList.findIndex(function(daydoItem){return daydoItem.id===id;});var selectedItem=daydoItemList[index];selectedItem.content=e.target.value;// 서버\nfetch(\"http://localhost:8080/api/daydo/\".concat(id),{method:'PUT',headers:{'content-type':'application/json'},body:JSON.stringify(selectedItem)}).then(function(response){return response.json();}).then(function(updatedId){console.log(\"ID:\",updatedId,\" 업데이트됨\");});// 클라이언트\nvar updatedDaydoItemList=_toConsumableArray(daydoItemList);updatedDaydoItemList[index]=_objectSpread({},selectedItem);setDaydoItemList(updatedDaydoItemList);// 서버에서 다시 목록 가져오기\nsetFetched(false);}function handleFormInputChange(e){setFormInput(e.target.value);}function handleKeyPress(e){if(e.key==='Enter'){handleCreate();}}function handleSlider(e){if(e.target.className==='right'){if(day===7){setDay(1);}else{setDay(day+1);}}else{if(day===1){setDay(7);}else{setDay(day-1);}}}return/*#__PURE__*/_jsxs(\"div\",{className:\"template-wrapper daydo-list-template-wrapper\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"daydo-title-wrapper\",children:/*#__PURE__*/_jsx(DaydoSlider,{day:day,onSlide:handleSlider})}),/*#__PURE__*/_jsx(\"p\",{}),/*#__PURE__*/_jsx(\"div\",{className:\"daydo-list-wrapper\",children:/*#__PURE__*/_jsx(DaydoItemList,{day:day,daydoList:daydoItemList,onRemove:handleRemove,onChange:handleDaydoInputChange})}),/*#__PURE__*/_jsx(\"div\",{className:\"daydo-form-wrapper\",children:/*#__PURE__*/_jsx(DaydoForm,{value:formInput,onChange:handleFormInputChange,onCreate:handleCreate,onKeyPress:handleKeyPress})})]});};export default DayDoListTemplate;","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/src/components/daydo/DaydoListTemplate.js"],"names":["useEffect","useState","DaydoItemList","DaydoForm","DaydoSlider","DayDoListTemplate","darkTheme","today","Date","allDaydoItemList","setAllDaydoItemList","daydoItemList","setDaydoItemList","formInput","setFormInput","fetched","setFetched","getDay","day","setDay","console","log","inputs","document","querySelectorAll","forEach","input","classList","add","remove","fetch","then","response","json","items","defaultDaydoItemList","filter","daydoItem","handleCreate","newDaydoItem","content","method","headers","body","JSON","stringify","handleRemove","id","updatedDaydoItemList","deletedId","handleDaydoInputChange","e","index","findIndex","selectedItem","target","value","updatedId","handleFormInputChange","handleKeyPress","key","handleSlider","className"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport DaydoItemList from './DaydoItemList'\r\nimport DaydoForm from './DaydoForm'\r\nimport './DaydoListTemplate.css'\r\nimport DaydoSlider from './DaydoSlider'\r\n\r\nconst DayDoListTemplate = ({ darkTheme }) => {\r\n    const today = new Date();\r\n\r\n    const [ allDaydoItemList, setAllDaydoItemList ] = useState([]);\r\n    const [ daydoItemList, setDaydoItemList ] = useState([]);\r\n\r\n    const [ formInput, setFormInput ] = useState('');\r\n    const [ fetched, setFetched ] = useState(false);\r\n\r\n    const [ day, setDay ] = useState(today.getDay()); // 설정의 요일별 할 일 목록의 세팅되어 있는 요일 (기본 월요일 설정)\r\n\r\n    useEffect(() => { // 다크 모드 \r\n        console.log()\r\n        const inputs = document.querySelectorAll('input');\r\n    \r\n        if(darkTheme) {  \r\n          inputs.forEach(input => input.classList.add('dark'));\r\n        }\r\n        else {\r\n          inputs.forEach(input => input.classList.remove('dark'));\r\n        }\r\n      });\r\n      \r\n    // FETCH - GET\r\n    useEffect(() => {\r\n        // 서버로부터 모든 요일의 Daydo 목록 가져오기\r\n        if(!fetched) {\r\n            fetch('http://localhost:8080/api/daydo')\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                console.log(\"서버로부터 모든 요일별 Daydo 목록 가져옴: \", items);\r\n                setFetched(true);\r\n                setAllDaydoItemList(items);\r\n            });\r\n        }\r\n\r\n                    \r\n        // 초기로 설정되어 있는 요일에 해당하는 요일별 할 일 목록 생성\r\n        // !! Java에서 day = 1 ~ 7 : 월요일 ~ 일요일 | JavaScript에서 day = 0 ~ 6 : 일요일 ~ 토요일\r\n        const defaultDaydoItemList = allDaydoItemList.filter(daydoItem => {\r\n            if(day === 0) {\r\n                return daydoItem.day === 7;\r\n            }\r\n            else {\r\n                return daydoItem.day === day;\r\n            }\r\n        });\r\n            \r\n        setDaydoItemList(defaultDaydoItemList);\r\n    }, [fetched, allDaydoItemList, day]);\r\n\r\n    // CREATE - POST \r\n    function handleCreate() {\r\n        // Form 안의 내용을 초기화\r\n        setFormInput('');\r\n\r\n        // 서버로 보낼 객체 아이템 생성\r\n        const newDaydoItem = {\r\n            content: formInput,\r\n            day: day\r\n        };\r\n        \r\n        // POST 방식으로 서버 전송\r\n        fetch('http://localhost:8080/api/daydo', {\r\n            method : 'POST',\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(newDaydoItem)\r\n        }) // 서버에서 받은 응답을 객체화 후, DaydoItemList에 추가 (컴포넌트 re-render됨)\r\n        .then((response) => response.json())\r\n        .then((newDaydoItem) => {\r\n            console.log(\"새 Todo 아이템 생성됨: \", newDaydoItem);\r\n             setDaydoItemList([...daydoItemList, newDaydoItem]);\r\n         })\r\n\r\n         // 서버에서 다시 목록 가져오기\r\n         setFetched(false);\r\n    }\r\n    \r\n    // REMOVE - DELETE\r\n    function handleRemove(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const updatedDaydoItemList = daydoItemList.filter(daydoItem => daydoItem.id !== id);\r\n\r\n        //서버\r\n        fetch(`http://localhost:8080/api/daydo/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }           \r\n        })\r\n        .then((response) => response.json())\r\n        .then((deletedId) => {\r\n            console.log(\"ID:\", deletedId, \" 삭제됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        setDaydoItemList(updatedDaydoItemList);\r\n\r\n        // 서버에서 다시 목록 가져오기\r\n        setFetched(false);\r\n    }\r\n  \r\n    // UPDATE (content) - PUT\r\n    function handleDaydoInputChange(e, id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = daydoItemList.findIndex(daydoItem => daydoItem.id === id);\r\n        const selectedItem = daydoItemList[index];\r\n        selectedItem.content = e.target.value;\r\n\r\n        // 서버\r\n        fetch(`http://localhost:8080/api/daydo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedDaydoItemList = [...daydoItemList];\r\n\r\n        updatedDaydoItemList[index] = {\r\n            ...selectedItem,\r\n        };\r\n\r\n        setDaydoItemList(updatedDaydoItemList);\r\n\r\n        // 서버에서 다시 목록 가져오기\r\n        setFetched(false);\r\n    }\r\n\r\n    function handleFormInputChange(e) {\r\n        setFormInput(e.target.value);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        if(e.key === 'Enter') {\r\n            handleCreate();\r\n        }\r\n    }\r\n\r\n    function handleSlider(e) {\r\n        if(e.target.className === 'right') {\r\n            if(day === 7) {\r\n                setDay(1);\r\n            }\r\n            else {\r\n                setDay(day+1);\r\n            }\r\n        }\r\n        else {\r\n            if(day === 1) {\r\n                setDay(7);\r\n            }\r\n            else {\r\n                setDay(day-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"template-wrapper daydo-list-template-wrapper\">\r\n            <div className=\"daydo-title-wrapper\">\r\n                <DaydoSlider day={day} onSlide={handleSlider}></DaydoSlider>\r\n            </div>\r\n            <p></p>\r\n            <div className=\"daydo-list-wrapper\">\r\n                <DaydoItemList\r\n                    day={day}\r\n                    daydoList={daydoItemList}\r\n                    onRemove={handleRemove}\r\n                    onChange={handleDaydoInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"daydo-form-wrapper\">\r\n                <DaydoForm\r\n                    value={formInput}\r\n                    onChange={handleFormInputChange}\r\n                    onCreate={handleCreate}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayDoListTemplate;"]},"metadata":{},"sourceType":"module"}