{"ast":null,"code":"import _objectSpread from\"C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";import _toConsumableArray from\"C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";import _slicedToArray from\"C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{useEffect,useState}from'react';import TodoForm from'./TodoForm';import TodoItemList from'./TodoItemList';import'./TodoListTemplate.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoListTemplate=function TodoListTemplate(_ref){var darkTheme=_ref.darkTheme;var _useState=useState([]),_useState2=_slicedToArray(_useState,2),todoItemList=_useState2[0],setTodoItemList=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),formInput=_useState4[0],setFormInput=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),fetched=_useState6[0],setFetched=_useState6[1];var userIdLocation=document.cookie.split('; ').find(function(row){return row.startsWith('userId');});var userId=userIdLocation===undefined?window.location.replace('http://tasko.today'):userIdLocation.split('=')[1];useEffect(function(){// 다크 모드 \nconsole.log();var inputs=document.querySelectorAll('input');if(darkTheme){inputs.forEach(function(input){return input.classList.add('dark');});}else{inputs.forEach(function(input){return input.classList.remove('dark');});}});// FETCH - POST\nuseEffect(function(){//첫 로딩시에만 서버로부터 Todo 목록 가져오기\nif(!fetched){fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todos',{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(userId)}).then(function(response){return response.json();}).then(function(items){console.log(\"서버로부터 Todo 목록 가져옴: \",items);setTodoItemList(items);setFetched(true);});}},[fetched]);// CREATE - POST \nfunction handleCreate(){// Form 안의 내용을 초기화\nsetFormInput('');// 서버로 보낼 객체 아이템 생성\nvar newTodoItem={userId:userId,content:formInput,isDone:false};// POST 방식으로 서버 전송\nfetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todo',{method:'POST',headers:{'content-type':'application/json'},body:JSON.stringify(newTodoItem)})// 서버에서 받은 응답을 객체화 후, TodoItemList에 추가 (컴포넌트 re-render됨)\n.then(function(response){return response.json();}).then(function(newTodoItem){console.log(\"새 Todo 아이템 생성됨: \",newTodoItem);setTodoItemList([].concat(_toConsumableArray(todoItemList),[newTodoItem]));});}// REMOVE - DELETE\nfunction handleRemove(id){// 서버와 클라이언트 따로따로 처리됨\nvar updatedTodoItemList=todoItemList.filter(function(todoItem){return todoItem.id!==id;});//서버\nfetch(\"http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todo/\".concat(id),{method:'DELETE',headers:{'content-type':'application/json'}}).then(function(response){return response.json();}).then(function(deletedId){console.log(\"ID:\",deletedId,\" 삭제됨\");});//클라이언트\nsetTodoItemList(updatedTodoItemList);}// UPDATE (content) - PUT\nfunction handleTodoInputChange(e,id){// 서버와 클라이언트 따로따로 처리됨\nvar index=todoItemList.findIndex(function(todoItem){return todoItem.id===id;});var selectedItem=todoItemList[index];selectedItem.content=e.target.value;// 서버\nfetch(\"http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todo/\".concat(id),{method:'PUT',headers:{'content-type':'application/json'},body:JSON.stringify(selectedItem)}).then(function(response){return response.json();}).then(function(updatedId){console.log(\"ID:\",updatedId,\" 업데이트됨\");});// 클라이언트\nvar updatedTodoItemList=_toConsumableArray(todoItemList);updatedTodoItemList[index]=_objectSpread({},selectedItem);setTodoItemList(updatedTodoItemList);}// UPDATE (isDone) - PUT\nfunction handleToggle(id){// 서버와 클라이언트 따로따로 처리됨\nvar index=todoItemList.findIndex(function(todoItem){return todoItem.id===id;});var selectedItem=todoItemList[index];selectedItem.isDone=!selectedItem.isDone;// 서버\nfetch(\"http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todo/\".concat(id),{method:'PUT',headers:{'content-type':'application/json'},body:JSON.stringify(selectedItem)}).then(function(response){return response.json();}).then(function(updatedId){console.log(\"ID:\",updatedId,\" 업데이트됨\");});// 클라이언트\nvar updatedTodoItemList=_toConsumableArray(todoItemList);updatedTodoItemList[index]=_objectSpread({},selectedItem);setTodoItemList(updatedTodoItemList);}function handleFormInputChange(e){setFormInput(e.target.value);}function handleKeyPress(e){if(e.key==='Enter'){handleCreate();}}return/*#__PURE__*/_jsxs(\"div\",{className:\"template-wrapper todo-list-template-wrapper\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"todo-title\",children:[/*#__PURE__*/_jsx(\"h2\",{children:\"\\uBAA9\\uB85D\"}),/*#__PURE__*/_jsx(\"p\",{})]}),/*#__PURE__*/_jsx(\"div\",{className:\"todo-lists-wrapper\",children:/*#__PURE__*/_jsx(TodoItemList,{todoList:todoItemList,onRemove:handleRemove,onChange:handleTodoInputChange,onToggle:handleToggle})}),/*#__PURE__*/_jsx(\"div\",{className:\"todo-form-wrapper\",children:/*#__PURE__*/_jsx(TodoForm,{value:formInput,onChange:handleFormInputChange,onCreate:handleCreate,onKeyPress:handleKeyPress})})]});};export default TodoListTemplate;","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/src/components/todo/TodoListTemplate.js"],"names":["useEffect","useState","TodoForm","TodoItemList","TodoListTemplate","darkTheme","todoItemList","setTodoItemList","formInput","setFormInput","fetched","setFetched","userIdLocation","document","cookie","split","find","row","startsWith","userId","undefined","window","location","replace","console","log","inputs","querySelectorAll","forEach","input","classList","add","remove","fetch","method","headers","body","JSON","stringify","then","response","json","items","handleCreate","newTodoItem","content","isDone","handleRemove","id","updatedTodoItemList","filter","todoItem","deletedId","handleTodoInputChange","e","index","findIndex","selectedItem","target","value","updatedId","handleToggle","handleFormInputChange","handleKeyPress","key"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoItemList from './TodoItemList';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = ({ darkTheme }) => {\r\n    const [ todoItemList, setTodoItemList ] = useState([]);\r\n    const [ formInput, setFormInput ] = useState('');\r\n    const [ fetched, setFetched ] = useState(false);\r\n\r\n    const userIdLocation = document.cookie.split('; ').find(row => row.startsWith('userId'));\r\n    const userId = userIdLocation === undefined ? window.location.replace('http://tasko.today') : userIdLocation.split('=')[1];\r\n    \r\n    useEffect(() => { // 다크 모드 \r\n        console.log()\r\n        const inputs = document.querySelectorAll('input');\r\n    \r\n        if(darkTheme) {  \r\n          inputs.forEach(input => input.classList.add('dark'));\r\n        }\r\n        else {\r\n          inputs.forEach(input => input.classList.remove('dark'));\r\n        }\r\n    });\r\n\r\n    // FETCH - POST\r\n    useEffect(() => {\r\n        //첫 로딩시에만 서버로부터 Todo 목록 가져오기\r\n        if(!fetched) {\r\n            fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todos', {\r\n                method : 'POST',\r\n                headers : {\r\n                    'content-type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(userId)\r\n            })\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                console.log(\"서버로부터 Todo 목록 가져옴: \", items);\r\n                setTodoItemList(items);\r\n                setFetched(true);\r\n            });\r\n        }\r\n    }, [fetched]);\r\n\r\n    // CREATE - POST \r\n    function handleCreate() {\r\n        // Form 안의 내용을 초기화\r\n        setFormInput('');\r\n\r\n        // 서버로 보낼 객체 아이템 생성\r\n        const newTodoItem = {\r\n            userId: userId,\r\n            content: formInput,\r\n            isDone: false\r\n        };\r\n        \r\n        // POST 방식으로 서버 전송\r\n        fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todo', {\r\n            method : 'POST',\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(newTodoItem)\r\n        }) // 서버에서 받은 응답을 객체화 후, TodoItemList에 추가 (컴포넌트 re-render됨)\r\n        .then((response) => response.json())\r\n        .then((newTodoItem) => {\r\n            console.log(\"새 Todo 아이템 생성됨: \", newTodoItem);\r\n             setTodoItemList([...todoItemList, newTodoItem]);\r\n         })\r\n    }\r\n    \r\n    // REMOVE - DELETE\r\n    function handleRemove(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const updatedTodoItemList = todoItemList.filter(todoItem => todoItem.id !== id);\r\n\r\n        //서버\r\n        fetch(`http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todo/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }           \r\n        })\r\n        .then((response) => response.json())\r\n        .then((deletedId) => {\r\n            console.log(\"ID:\", deletedId, \" 삭제됨\");\r\n        });\r\n\r\n        //클라이언트\r\n        setTodoItemList(updatedTodoItemList);\r\n    }\r\n  \r\n    // UPDATE (content) - PUT\r\n    function handleTodoInputChange(e, id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = todoItemList.findIndex(todoItem => todoItem.id === id);\r\n        const selectedItem = todoItemList[index];\r\n        selectedItem.content = e.target.value;\r\n\r\n        // 서버\r\n        fetch(`http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedTodoItemList = [...todoItemList];\r\n\r\n        updatedTodoItemList[index] = {\r\n            ...selectedItem,\r\n        };\r\n\r\n        setTodoItemList(updatedTodoItemList);\r\n    }\r\n    \r\n    // UPDATE (isDone) - PUT\r\n    function handleToggle(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = todoItemList.findIndex(todoItem => todoItem.id === id);\r\n        const selectedItem = todoItemList[index];\r\n        selectedItem.isDone = !selectedItem.isDone;\r\n\r\n        // 서버\r\n        fetch(`http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com/api/todo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedTodoItemList = [...todoItemList];\r\n\r\n        updatedTodoItemList[index] = {\r\n            ...selectedItem\r\n        };\r\n\r\n        setTodoItemList(updatedTodoItemList);       \r\n    }\r\n\r\n    function handleFormInputChange(e) {\r\n        setFormInput(e.target.value);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        if(e.key === 'Enter') {\r\n            handleCreate();\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <div className=\"template-wrapper todo-list-template-wrapper\">\r\n            <div className=\"todo-title\">\r\n                <h2>목록</h2>\r\n                <p></p>\r\n            </div>\r\n            <div className=\"todo-lists-wrapper\">\r\n                <TodoItemList\r\n                    todoList={todoItemList}\r\n                    onRemove={handleRemove}\r\n                    onChange={handleTodoInputChange}\r\n                    onToggle={handleToggle}\r\n                />\r\n            </div>\r\n            <div className=\"todo-form-wrapper\">\r\n                <TodoForm\r\n                    value={formInput}\r\n                    onChange={handleFormInputChange}\r\n                    onCreate={handleCreate}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoListTemplate;"]},"metadata":{},"sourceType":"module"}