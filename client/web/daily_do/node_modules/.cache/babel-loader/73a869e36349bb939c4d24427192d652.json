{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\Desktop\\\\Komputer\\\\Projects\\\\TASK\\\\client\\\\web\\\\daily_do\\\\src\\\\components\\\\Daydo\\\\DaydoListTemplate.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport DaydoItemList from './DaydoItemList';\nimport DaydoForm from './DaydoForm';\nimport './DaydoListTemplate.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DayDoListTemplate = () => {\n  _s();\n\n  const [allDaydoItemList, setAllDaydoItemList] = useState(null);\n  const [daydoItemList, setDaydoItemList] = useState(null);\n  const [formInput, setFormInput] = useState('');\n  const [fetched, setFetched] = useState(false); // FETCH - GET\n\n  useEffect(() => {\n    //첫 로딩시에만 서버로부터 모든 요일의 Daydo 목록 가져오기\n    if (!allDaydoItemList && !fetched) {\n      fetch('http://localhost:8080/api/daydo').then(response => response.json()).then(items => {\n        console.log(\"서버로부터 모든 요일별 Daydo 목록 가져옴: \", items);\n        setAllDaydoItemList(items);\n        setFetched(true);\n      });\n    }\n  }); // CREAT - POST \n\n  function handleCreate() {\n    // Form 안의 내용을 초기화\n    setFormInput(''); // 서버로 보낼 객체 아이템 생성\n\n    const newDaydoItem = {\n      content: formInput,\n      isDone: false\n    }; // POST 방식으로 서버 전송\n\n    fetch('http://localhost:8080/api/daydo', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newDaydoItem)\n    }) // 서버에서 받은 응답을 객체화 후, DaydoItemList에 추가 (컴포넌트 re-render됨)\n    .then(response => response.json()).then(newDaydoItem => {\n      console.log(\"새 Todo 아이템 생성됨: \", newDaydoItem);\n      setDaydoItemList([...daydoItemList, newDaydoItem]);\n    });\n  } // REMOVE - DELETE\n\n\n  function handleRemove(id) {\n    // 서버와 클라이언트 따로따로 처리됨\n    const updatedDaydoItemList = daydoItemList.filter(daydoItem => daydoItem.id !== id); //서버\n\n    fetch(`http://localhost:8080/api/daydo/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(deletedId => {\n      console.log(\"ID:\", deletedId, \" 삭제됨\");\n    }); //클라이언트\n\n    setDaydoItemList(updatedDaydoItemList);\n  } // UPDATE (content) - PUT\n\n\n  function handleDaydoInputChange(e, id) {\n    // 서버와 클라이언트 따로따로 처리됨\n    const index = daydoItemList.findIndex(daydoItem => daydoItem.id === id);\n    const selectedItem = daydoItemList[index];\n    selectedItem.content = e.target.value; // 서버\n\n    fetch(`http://localhost:8080/api/daydo/${id}`, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(selectedItem)\n    }).then(response => response.json()).then(updatedId => {\n      console.log(\"ID:\", updatedId, \" 업데이트됨\");\n    }); // 클라이언트\n\n    const updatedDaydoItemList = [...daydoItemList];\n    updatedDaydoItemList[index] = { ...selectedItem\n    };\n    setDaydoItemList(updatedDaydoItemList);\n  }\n\n  function handleFormInputChange(e) {\n    setFormInput(e.target.value);\n  }\n\n  function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      handleCreate();\n    }\n  }\n\n  function getTodayDay() {\n    const today = new Date();\n    const week = new Array('일', '월', '화', '수', '목', '금', '토');\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-template-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"<\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \">\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(DaydoItemList, {\n        daydoList: daydoItemList,\n        onRemove: handleRemove,\n        onChange: handleDaydoInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(DaydoForm, {\n        value: formInput,\n        onChange: handleFormInputChange,\n        onCreate: handleCreate,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 122,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DayDoListTemplate, \"aOxNgK7Co089BMAC1n3xaKszakU=\");\n\n_c = DayDoListTemplate;\nexport default DayDoListTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayDoListTemplate\");","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/src/components/Daydo/DaydoListTemplate.js"],"names":["useEffect","useState","DaydoItemList","DaydoForm","DayDoListTemplate","allDaydoItemList","setAllDaydoItemList","daydoItemList","setDaydoItemList","formInput","setFormInput","fetched","setFetched","fetch","then","response","json","items","console","log","handleCreate","newDaydoItem","content","isDone","method","headers","body","JSON","stringify","handleRemove","id","updatedDaydoItemList","filter","daydoItem","deletedId","handleDaydoInputChange","e","index","findIndex","selectedItem","target","value","updatedId","handleFormInputChange","handleKeyPress","key","getTodayDay","today","Date","week","Array"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport DaydoItemList from './DaydoItemList'\r\nimport DaydoForm from './DaydoForm'\r\nimport './DaydoListTemplate.css'\r\n\r\nconst DayDoListTemplate = () => {\r\n    const [ allDaydoItemList, setAllDaydoItemList ] = useState(null);\r\n    const [ daydoItemList, setDaydoItemList ] = useState(null);\r\n\r\n    const [ formInput, setFormInput ] = useState('');\r\n    const [ fetched, setFetched ] = useState(false);\r\n\r\n    // FETCH - GET\r\n    useEffect(() => {\r\n        //첫 로딩시에만 서버로부터 모든 요일의 Daydo 목록 가져오기\r\n        if(!allDaydoItemList && !fetched) {\r\n            fetch('http://localhost:8080/api/daydo')\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                console.log(\"서버로부터 모든 요일별 Daydo 목록 가져옴: \", items);\r\n                setAllDaydoItemList(items);\r\n                setFetched(true);\r\n            });\r\n        }\r\n    });\r\n\r\n    // CREAT - POST \r\n    function handleCreate() {\r\n        // Form 안의 내용을 초기화\r\n        setFormInput('');\r\n\r\n        // 서버로 보낼 객체 아이템 생성\r\n        const newDaydoItem = {\r\n            content: formInput,\r\n            isDone: false\r\n        };\r\n        \r\n        // POST 방식으로 서버 전송\r\n        fetch('http://localhost:8080/api/daydo', {\r\n            method : 'POST',\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(newDaydoItem)\r\n        }) // 서버에서 받은 응답을 객체화 후, DaydoItemList에 추가 (컴포넌트 re-render됨)\r\n        .then((response) => response.json())\r\n        .then((newDaydoItem) => {\r\n            console.log(\"새 Todo 아이템 생성됨: \", newDaydoItem);\r\n             setDaydoItemList([...daydoItemList, newDaydoItem]);\r\n         })\r\n    }\r\n    \r\n    // REMOVE - DELETE\r\n    function handleRemove(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const updatedDaydoItemList = daydoItemList.filter(daydoItem => daydoItem.id !== id);\r\n\r\n        //서버\r\n        fetch(`http://localhost:8080/api/daydo/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }           \r\n        })\r\n        .then((response) => response.json())\r\n        .then((deletedId) => {\r\n            console.log(\"ID:\", deletedId, \" 삭제됨\");\r\n        });\r\n\r\n        //클라이언트\r\n        setDaydoItemList(updatedDaydoItemList);\r\n    }\r\n  \r\n    // UPDATE (content) - PUT\r\n    function handleDaydoInputChange(e, id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = daydoItemList.findIndex(daydoItem => daydoItem.id === id);\r\n        const selectedItem = daydoItemList[index];\r\n        selectedItem.content = e.target.value;\r\n\r\n        // 서버\r\n        fetch(`http://localhost:8080/api/daydo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedDaydoItemList = [...daydoItemList];\r\n\r\n        updatedDaydoItemList[index] = {\r\n            ...selectedItem,\r\n        };\r\n\r\n        setDaydoItemList(updatedDaydoItemList);\r\n    }\r\n\r\n    function handleFormInputChange(e) {\r\n        setFormInput(e.target.value);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        if(e.key === 'Enter') {\r\n            handleCreate();\r\n        }\r\n    }\r\n    \r\n    function getTodayDay() {\r\n        const today = new Date();\r\n        const week = new Array('일','월','화','수','목','금','토');\r\n\r\n        \r\n    }\r\n    \r\n    return (\r\n        <div className=\"todo-list-template-wrapper\">\r\n            <div className=\"title\">\r\n                <h2>&#60;</h2>\r\n                <h2>{}</h2>\r\n                <h2>&#62;</h2>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"todo-list-wrapper\">\r\n                <DaydoItemList\r\n                    daydoList={daydoItemList}\r\n                    onRemove={handleRemove}\r\n                    onChange={handleDaydoInputChange}\r\n                />\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"todo-form-wrapper\">\r\n                <DaydoForm\r\n                    value={formInput}\r\n                    onChange={handleFormInputChange}\r\n                    onCreate={handleCreate}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayDoListTemplate;"]},"metadata":{},"sourceType":"module"}