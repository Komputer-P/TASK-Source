{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\Desktop\\\\Komputer\\\\Projects\\\\TASK\\\\client\\\\web\\\\daily_do\\\\src\\\\components\\\\daydo\\\\DaydoListTemplate.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport DaydoItemList from './DaydoItemList';\nimport DaydoForm from './DaydoForm';\nimport './DaydoListTemplate.css';\nimport DaydoSlider from './DaydoSlider';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst DayDoListTemplate = ({\n  darkTheme\n}) => {\n  _s();\n\n  const today = new Date();\n  const [allDaydoItemList, setAllDaydoItemList] = useState([]);\n  const [daydoItemList, setDaydoItemList] = useState([]);\n  const [formInput, setFormInput] = useState('');\n  const [fetched, setFetched] = useState(false);\n  const [day, setDay] = useState(today.getDay()); // 설정의 요일별 할 일 목록의 세팅되어 있는 요일 (기본 월요일 설정)\n\n  const idToken = localStorage.getItem(\"idToken\");\n  useEffect(() => {\n    // 다크 모드 \n    console.log();\n    const inputs = document.querySelectorAll('input');\n\n    if (darkTheme) {\n      inputs.forEach(input => input.classList.add('dark'));\n    } else {\n      inputs.forEach(input => input.classList.remove('dark'));\n    }\n  }); // FETCH - POST\n\n  useEffect(() => {\n    // 서버로부터 모든 요일의 Daydo 목록 가져오기\n    if (!fetched) {\n      fetch('http://localhost:8080/api/daydos', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(idToken)\n      }).then(response => response.json()).then(items => {\n        console.log(\"서버로부터 모든 요일별 Daydo 목록 가져옴: \", items);\n        setFetched(true);\n        setAllDaydoItemList(items);\n      });\n    } // 초기로 설정되어 있는 요일에 해당하는 요일별 할 일 목록 생성\n    // !! Java에서 day = 1 ~ 7 : 월요일 ~ 일요일 | JavaScript에서 day = 0 ~ 6 : 일요일 ~ 토요일\n\n\n    const defaultDaydoItemList = allDaydoItemList.filter(daydoItem => {\n      if (day === 0) {\n        return daydoItem.day === 7;\n      } else {\n        return daydoItem.day === day;\n      }\n    });\n    setDaydoItemList(defaultDaydoItemList);\n  }, [fetched, allDaydoItemList, day]); // CREATE - POST \n\n  function handleCreate() {\n    // Form 안의 내용을 초기화\n    setFormInput(''); // 서버로 보낼 객체 아이템 생성\n\n    const newDaydoItem = {\n      token: idToken,\n      content: formInput,\n      day: day\n    }; // POST 방식으로 서버 전송\n\n    fetch('http://localhost:8080/api/daydo', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newDaydoItem)\n    }) // 서버에서 받은 응답을 객체화 후, DaydoItemList에 추가 (컴포넌트 re-render됨)\n    .then(response => response.json()).then(newDaydoItem => {\n      console.log(\"새 Todo 아이템 생성됨: \", newDaydoItem);\n      setDaydoItemList([...daydoItemList, newDaydoItem]);\n    }); // 서버에서 다시 목록 가져오기\n\n    setFetched(false);\n  } // REMOVE - DELETE\n\n\n  function handleRemove(id) {\n    // 서버와 클라이언트 따로따로 처리됨\n    const updatedDaydoItemList = daydoItemList.filter(daydoItem => daydoItem.id !== id); //서버\n\n    fetch(`http://localhost:8080/api/daydo/${id}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(deletedId => {\n      console.log(\"ID:\", deletedId, \" 삭제됨\");\n    }); // 클라이언트\n\n    setDaydoItemList(updatedDaydoItemList); // 서버에서 다시 목록 가져오기\n\n    setFetched(false);\n  } // UPDATE (content) - PUT\n\n\n  function handleDaydoInputChange(e, id) {\n    // 서버와 클라이언트 따로따로 처리됨\n    const index = daydoItemList.findIndex(daydoItem => daydoItem.id === id);\n    const selectedItem = daydoItemList[index];\n    selectedItem.content = e.target.value; // 서버\n\n    fetch(`http://localhost:8080/api/daydo/${id}`, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(selectedItem)\n    }).then(response => response.json()).then(updatedId => {\n      console.log(\"ID:\", updatedId, \" 업데이트됨\");\n    }); // 클라이언트\n\n    const updatedDaydoItemList = [...daydoItemList];\n    updatedDaydoItemList[index] = { ...selectedItem\n    };\n    setDaydoItemList(updatedDaydoItemList); // 서버에서 다시 목록 가져오기\n\n    setFetched(false);\n  }\n\n  function handleFormInputChange(e) {\n    setFormInput(e.target.value);\n  }\n\n  function handleKeyPress(e) {\n    if (e.key === 'Enter') {\n      handleCreate();\n    }\n  }\n\n  function handleSlider(e) {\n    if (e.target.className === 'right') {\n      if (day === 7) {\n        setDay(1);\n      } else {\n        setDay(day + 1);\n      }\n    } else {\n      if (day === 1) {\n        setDay(7);\n      } else {\n        setDay(day - 1);\n      }\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"template-wrapper daydo-list-template-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daydo-title-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(DaydoSlider, {\n        day: day,\n        onSlide: handleSlider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 186,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daydo-list-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(DaydoItemList, {\n        day: day,\n        daydoList: daydoItemList,\n        onRemove: handleRemove,\n        onChange: handleDaydoInputChange\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"daydo-form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(DaydoForm, {\n        value: formInput,\n        onChange: handleFormInputChange,\n        onCreate: handleCreate,\n        onKeyPress: handleKeyPress\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 197,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 9\n  }, this);\n};\n\n_s(DayDoListTemplate, \"snuudAzGFt/aevaf2HIroR8Mttk=\");\n\n_c = DayDoListTemplate;\nexport default DayDoListTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"DayDoListTemplate\");","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/src/components/daydo/DaydoListTemplate.js"],"names":["useEffect","useState","DaydoItemList","DaydoForm","DaydoSlider","DayDoListTemplate","darkTheme","today","Date","allDaydoItemList","setAllDaydoItemList","daydoItemList","setDaydoItemList","formInput","setFormInput","fetched","setFetched","day","setDay","getDay","idToken","localStorage","getItem","console","log","inputs","document","querySelectorAll","forEach","input","classList","add","remove","fetch","method","headers","body","JSON","stringify","then","response","json","items","defaultDaydoItemList","filter","daydoItem","handleCreate","newDaydoItem","token","content","handleRemove","id","updatedDaydoItemList","deletedId","handleDaydoInputChange","e","index","findIndex","selectedItem","target","value","updatedId","handleFormInputChange","handleKeyPress","key","handleSlider","className"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react'\r\nimport DaydoItemList from './DaydoItemList'\r\nimport DaydoForm from './DaydoForm'\r\nimport './DaydoListTemplate.css'\r\nimport DaydoSlider from './DaydoSlider'\r\n\r\nconst DayDoListTemplate = ({ darkTheme }) => {\r\n    const today = new Date();\r\n\r\n    const [ allDaydoItemList, setAllDaydoItemList ] = useState([]);\r\n    const [ daydoItemList, setDaydoItemList ] = useState([]);\r\n\r\n    const [ formInput, setFormInput ] = useState('');\r\n    const [ fetched, setFetched ] = useState(false);\r\n\r\n    const [ day, setDay ] = useState(today.getDay()); // 설정의 요일별 할 일 목록의 세팅되어 있는 요일 (기본 월요일 설정)\r\n\r\n    const idToken = localStorage.getItem(\"idToken\");\r\n\r\n    useEffect(() => { // 다크 모드 \r\n        console.log()\r\n        const inputs = document.querySelectorAll('input');\r\n    \r\n        if(darkTheme) {  \r\n          inputs.forEach(input => input.classList.add('dark'));\r\n        }\r\n        else {\r\n          inputs.forEach(input => input.classList.remove('dark'));\r\n        }\r\n      });\r\n      \r\n    // FETCH - POST\r\n    useEffect(() => {\r\n        // 서버로부터 모든 요일의 Daydo 목록 가져오기\r\n        if(!fetched) {\r\n            fetch('http://localhost:8080/api/daydos', {\r\n                method : 'POST',\r\n                headers : {\r\n                    'content-type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(idToken)\r\n            })\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                console.log(\"서버로부터 모든 요일별 Daydo 목록 가져옴: \", items);\r\n                setFetched(true);\r\n                setAllDaydoItemList(items);\r\n            });\r\n        }\r\n\r\n                    \r\n        // 초기로 설정되어 있는 요일에 해당하는 요일별 할 일 목록 생성\r\n        // !! Java에서 day = 1 ~ 7 : 월요일 ~ 일요일 | JavaScript에서 day = 0 ~ 6 : 일요일 ~ 토요일\r\n        const defaultDaydoItemList = allDaydoItemList.filter(daydoItem => {\r\n            if(day === 0) {\r\n                return daydoItem.day === 7;\r\n            }\r\n            else {\r\n                return daydoItem.day === day;\r\n            }\r\n        });\r\n            \r\n        setDaydoItemList(defaultDaydoItemList);\r\n    }, [fetched, allDaydoItemList, day]);\r\n\r\n    // CREATE - POST \r\n    function handleCreate() {\r\n        // Form 안의 내용을 초기화\r\n        setFormInput('');\r\n\r\n        // 서버로 보낼 객체 아이템 생성\r\n        const newDaydoItem = {\r\n            token: idToken,\r\n            content: formInput,\r\n            day: day\r\n        };\r\n        \r\n        // POST 방식으로 서버 전송\r\n        fetch('http://localhost:8080/api/daydo', {\r\n            method : 'POST',\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(newDaydoItem)\r\n        }) // 서버에서 받은 응답을 객체화 후, DaydoItemList에 추가 (컴포넌트 re-render됨)\r\n        .then((response) => response.json())\r\n        .then((newDaydoItem) => {\r\n            console.log(\"새 Todo 아이템 생성됨: \", newDaydoItem);\r\n             setDaydoItemList([...daydoItemList, newDaydoItem]);\r\n         })\r\n\r\n         // 서버에서 다시 목록 가져오기\r\n         setFetched(false);\r\n    }\r\n    \r\n    // REMOVE - DELETE\r\n    function handleRemove(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const updatedDaydoItemList = daydoItemList.filter(daydoItem => daydoItem.id !== id);\r\n\r\n        //서버\r\n        fetch(`http://localhost:8080/api/daydo/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }           \r\n        })\r\n        .then((response) => response.json())\r\n        .then((deletedId) => {\r\n            console.log(\"ID:\", deletedId, \" 삭제됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        setDaydoItemList(updatedDaydoItemList);\r\n\r\n        // 서버에서 다시 목록 가져오기\r\n        setFetched(false);\r\n    }\r\n  \r\n    // UPDATE (content) - PUT\r\n    function handleDaydoInputChange(e, id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = daydoItemList.findIndex(daydoItem => daydoItem.id === id);\r\n        const selectedItem = daydoItemList[index];\r\n        selectedItem.content = e.target.value;\r\n\r\n        // 서버\r\n        fetch(`http://localhost:8080/api/daydo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedDaydoItemList = [...daydoItemList];\r\n\r\n        updatedDaydoItemList[index] = {\r\n            ...selectedItem,\r\n        };\r\n\r\n        setDaydoItemList(updatedDaydoItemList);\r\n\r\n        // 서버에서 다시 목록 가져오기\r\n        setFetched(false);\r\n    }\r\n\r\n    function handleFormInputChange(e) {\r\n        setFormInput(e.target.value);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        if(e.key === 'Enter') {\r\n            handleCreate();\r\n        }\r\n    }\r\n\r\n    function handleSlider(e) {\r\n        if(e.target.className === 'right') {\r\n            if(day === 7) {\r\n                setDay(1);\r\n            }\r\n            else {\r\n                setDay(day+1);\r\n            }\r\n        }\r\n        else {\r\n            if(day === 1) {\r\n                setDay(7);\r\n            }\r\n            else {\r\n                setDay(day-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"template-wrapper daydo-list-template-wrapper\">\r\n            <div className=\"daydo-title-wrapper\">\r\n                <DaydoSlider day={day} onSlide={handleSlider}></DaydoSlider>\r\n            </div>\r\n            <p></p>\r\n            <div className=\"daydo-list-wrapper\">\r\n                <DaydoItemList\r\n                    day={day}\r\n                    daydoList={daydoItemList}\r\n                    onRemove={handleRemove}\r\n                    onChange={handleDaydoInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"daydo-form-wrapper\">\r\n                <DaydoForm\r\n                    value={formInput}\r\n                    onChange={handleFormInputChange}\r\n                    onCreate={handleCreate}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayDoListTemplate;"]},"metadata":{},"sourceType":"module"}