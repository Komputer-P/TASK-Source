{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\Desktop\\\\Komputer\\\\Projects\\\\TASK\\\\client\\\\web\\\\daily_do\\\\src\\\\components\\\\TodoListTemplate.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from 'react';\nimport TodoForm from './TodoForm';\nimport TodoItemList from './TodoItemList';\nimport './TodoListTemplate.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst TodoListTemplate = () => {\n  _s();\n\n  let todoItemId = 1;\n  const [todoItemList, setTodoItemList] = useState([{\n    id: 0,\n    content: \"할일 #1\",\n    isDone: true\n  }]);\n  const [formInput, setFormInput] = useState('');\n\n  function handleToggle(id) {\n    setFormInput('');\n    const index = todoItemList.findIndex(todoItem => todoItem.id === id);\n    const selectedItem = todoItemList[index];\n    const updatedTodoItemList = [...todoItemList];\n    updatedTodoItemList[index] = { ...selectedItem,\n      isDone: !selectedItem.isDone\n    };\n    setTodoItemList(updatedTodoItemList);\n  }\n\n  function handleRemove(id) {\n    const updatedTodoItemList = todoItemList.filter(todoItem => todoItem.id !== id);\n    setTodoItemList(updatedTodoItemList);\n  }\n\n  function handleChange(e) {\n    setFormInput(e.target.value);\n  }\n\n  function handleCreate() {\n    const newTodoItem = {\n      id: todoItemId++,\n      content: formInput,\n      isDone: false\n    };\n    setTodoItemList([...todoItemList, newTodoItem]);\n    console.log(todoItemList);\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"todo-list-template-wrapper\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"title\",\n      children: /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: \"\\uBAA9\\uB85D\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-list-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(TodoItemList, {\n        todoList: todoItemList,\n        onToggle: handleToggle,\n        onRemove: handleRemove\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"todo-form-wrapper\",\n      children: /*#__PURE__*/_jsxDEV(TodoForm, {\n        value: formInput,\n        onChange: handleChange,\n        onCreate: handleCreate\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 9\n  }, this);\n};\n\n_s(TodoListTemplate, \"eG66yTng28VPACjTZRpWwB4R35o=\");\n\n_c = TodoListTemplate;\nexport default TodoListTemplate;\n\nvar _c;\n\n$RefreshReg$(_c, \"TodoListTemplate\");","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/src/components/TodoListTemplate.js"],"names":["useState","TodoForm","TodoItemList","TodoListTemplate","todoItemId","todoItemList","setTodoItemList","id","content","isDone","formInput","setFormInput","handleToggle","index","findIndex","todoItem","selectedItem","updatedTodoItemList","handleRemove","filter","handleChange","e","target","value","handleCreate","newTodoItem","console","log"],"mappings":";;;AAAA,SAASA,QAAT,QAAyB,OAAzB;AACA,OAAOC,QAAP,MAAqB,YAArB;AACA,OAAOC,YAAP,MAAyB,gBAAzB;AACA,OAAO,wBAAP;;;AAEA,MAAMC,gBAAgB,GAAG,MAAM;AAAA;;AAE3B,MAAIC,UAAU,GAAG,CAAjB;AAEA,QAAM,CAAEC,YAAF,EAAgBC,eAAhB,IAAoCN,QAAQ,CAAC,CAAE;AAAEO,IAAAA,EAAE,EAAE,CAAN;AAASC,IAAAA,OAAO,EAAE,OAAlB;AAA2BC,IAAAA,MAAM,EAAG;AAApC,GAAF,CAAD,CAAlD;AACA,QAAM,CAAEC,SAAF,EAAaC,YAAb,IAA8BX,QAAQ,CAAC,EAAD,CAA5C;;AAEA,WAASY,YAAT,CAAsBL,EAAtB,EAA0B;AACtBI,IAAAA,YAAY,CAAC,EAAD,CAAZ;AAEA,UAAME,KAAK,GAAGR,YAAY,CAACS,SAAb,CAAuBC,QAAQ,IAAIA,QAAQ,CAACR,EAAT,KAAgBA,EAAnD,CAAd;AACA,UAAMS,YAAY,GAAGX,YAAY,CAACQ,KAAD,CAAjC;AAEA,UAAMI,mBAAmB,GAAG,CAAC,GAAGZ,YAAJ,CAA5B;AAEAY,IAAAA,mBAAmB,CAACJ,KAAD,CAAnB,GAA6B,EACzB,GAAGG,YADsB;AAEzBP,MAAAA,MAAM,EAAE,CAACO,YAAY,CAACP;AAFG,KAA7B;AAKAH,IAAAA,eAAe,CAACW,mBAAD,CAAf;AACH;;AAED,WAASC,YAAT,CAAsBX,EAAtB,EAA0B;AACtB,UAAMU,mBAAmB,GAAGZ,YAAY,CAACc,MAAb,CAAoBJ,QAAQ,IAAIA,QAAQ,CAACR,EAAT,KAAgBA,EAAhD,CAA5B;AACAD,IAAAA,eAAe,CAACW,mBAAD,CAAf;AACH;;AAED,WAASG,YAAT,CAAsBC,CAAtB,EAAyB;AACrBV,IAAAA,YAAY,CAACU,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ;AACH;;AAED,WAASC,YAAT,GAAwB;AACpB,UAAMC,WAAW,GAAG;AAChBlB,MAAAA,EAAE,EAAEH,UAAU,EADE;AAEhBI,MAAAA,OAAO,EAAEE,SAFO;AAGhBD,MAAAA,MAAM,EAAE;AAHQ,KAApB;AAMAH,IAAAA,eAAe,CAAC,CAAC,GAAGD,YAAJ,EAAkBoB,WAAlB,CAAD,CAAf;AACAC,IAAAA,OAAO,CAACC,GAAR,CAAYtB,YAAZ;AACH;;AAGD,sBACI;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA,4BACI;AAAK,MAAA,SAAS,EAAC,OAAf;AAAA,6BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAA;AAAA;AAAA;AAAA,YAJJ,eAKI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI,QAAC,YAAD;AACI,QAAA,QAAQ,EAAEA,YADd;AAEI,QAAA,QAAQ,EAAEO,YAFd;AAGI,QAAA,QAAQ,EAAEM;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YALJ,eAYI;AAAA;AAAA;AAAA;AAAA,YAZJ,eAaI;AAAK,MAAA,SAAS,EAAC,mBAAf;AAAA,6BACI,QAAC,QAAD;AACI,QAAA,KAAK,EAAER,SADX;AAEI,QAAA,QAAQ,EAAEU,YAFd;AAGI,QAAA,QAAQ,EAAEI;AAHd;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAbJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAuBH,CAnED;;GAAMrB,gB;;KAAAA,gB;AAqEN,eAAeA,gBAAf","sourcesContent":["import { useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoItemList from './TodoItemList';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = () => {\r\n\r\n    let todoItemId = 1;\r\n\r\n    const [ todoItemList, setTodoItemList ] = useState([ { id: 0, content: \"할일 #1\", isDone : true }]);\r\n    const [ formInput, setFormInput ] = useState('');\r\n    \r\n    function handleToggle(id) {\r\n        setFormInput('');\r\n\r\n        const index = todoItemList.findIndex(todoItem => todoItem.id === id);\r\n        const selectedItem = todoItemList[index];\r\n        \r\n        const updatedTodoItemList = [...todoItemList];\r\n\r\n        updatedTodoItemList[index] = {\r\n            ...selectedItem,\r\n            isDone: !selectedItem.isDone\r\n        };\r\n\r\n        setTodoItemList(updatedTodoItemList);\r\n    }\r\n  \r\n    function handleRemove(id) {\r\n        const updatedTodoItemList = todoItemList.filter(todoItem => todoItem.id !== id);\r\n        setTodoItemList(updatedTodoItemList);\r\n    }\r\n  \r\n    function handleChange(e) {\r\n        setFormInput(e.target.value);\r\n    }\r\n  \r\n    function handleCreate() {\r\n        const newTodoItem = {\r\n            id: todoItemId++,\r\n            content: formInput,\r\n            isDone: false\r\n        };\r\n\r\n        setTodoItemList([...todoItemList, newTodoItem]);\r\n        console.log(todoItemList);\r\n    }\r\n\r\n\r\n    return (\r\n        <div className=\"todo-list-template-wrapper\">\r\n            <div className=\"title\">\r\n                <h2>목록</h2>\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"todo-list-wrapper\">\r\n                <TodoItemList\r\n                    todoList={todoItemList}\r\n                    onToggle={handleToggle}\r\n                    onRemove={handleRemove}\r\n                />\r\n            </div>\r\n            <hr></hr>\r\n            <div className=\"todo-form-wrapper\">\r\n                <TodoForm\r\n                    value={formInput}\r\n                    onChange={handleChange}\r\n                    onCreate={handleCreate}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoListTemplate;"]},"metadata":{},"sourceType":"module"}