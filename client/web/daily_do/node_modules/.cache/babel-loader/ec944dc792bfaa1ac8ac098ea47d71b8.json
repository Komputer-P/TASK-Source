{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\Desktop\\\\Komputer\\\\Projects\\\\TASK\\\\client\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { useEffect, useState } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [taskList, setTaskList] = useState(null); // CREATE\n\n  function createTask() {\n    const newTask = {\n      task: \"task create\",\n      isDone: false\n    };\n    fetch('http://localhost:8080/api/task', {\n      method: 'POST',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(newTask)\n    }).then(response => response.json()).then(data => {\n      console.log(\"Created: \", data);\n    });\n  } // Read\n\n\n  function fetchTask() {\n    fetch('http://localhost:8080/api/task').then(response => response.json()).then(data => {\n      console.log(\"TASKS: \", data);\n      setTaskList(data);\n    });\n  } // Update\n\n\n  function updateTask() {\n    const updatedTask = {\n      task: \"task update\",\n      isDone: true\n    };\n    fetch(`http://localhost:8080/api/task/${taskList.length - 1}`, {\n      method: 'PUT',\n      headers: {\n        'content-type': 'application/json'\n      },\n      body: JSON.stringify(updatedTask)\n    }).then(response => response.json()).then(data => {\n      console.log(\"TASKS: \", data);\n    });\n  } // Delete\n\n\n  function deleteTask() {\n    fetch(`http://localhost:8080/api/task/${taskList.length - 1}`, {\n      method: 'DELETE',\n      headers: {\n        'content-type': 'application/json'\n      }\n    }).then(response => response.json()).then(data => {\n      console.log(\"Deleted ID: \", data);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"TASK\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"TASK Client-Server API Test\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: createTask,\n      children: \"Create\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: fetchTask,\n      children: \"Read\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: updateTask,\n      children: \"Update\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: deleteTask,\n      children: \"Delete\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"+IlwNV1UdZ+6zVralioEmx6GfkI=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/src/App.js"],"names":["useEffect","useState","App","taskList","setTaskList","createTask","newTask","task","isDone","fetch","method","headers","body","JSON","stringify","then","response","json","data","console","log","fetchTask","updateTask","updatedTask","length","deleteTask"],"mappings":"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","sourcesContent":["import './App.css';\nimport { useEffect, useState } from 'react';\n\nfunction App() {\n  const [ taskList, setTaskList ] = useState(null);\n  \n  // CREATE\n  function createTask() {\n    const newTask = {\n      task : \"task create\",\n      isDone : false\n    }\n\n    fetch('http://localhost:8080/api/task', {\n      method : 'POST',\n      headers: {\n        'content-type' : 'application/json'\n      },\n      body : JSON.stringify(newTask)\n    })\n    .then((response) => response.json())\n    .then((data) => {\n      console.log(\"Created: \", data);\n    })\n      \n  } \n  \n  // Read\n  function fetchTask() {\n    fetch('http://localhost:8080/api/task')\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"TASKS: \", data);\n          setTaskList(data);\n        });\n  }\n\n  // Update\n  function updateTask() {\n    const updatedTask = {\n      task : \"task update\",\n      isDone : true\n    }\n\n    fetch(`http://localhost:8080/api/task/${taskList.length-1}`, {\n            method : 'PUT',\n            headers : {\n                'content-type' : 'application/json'\n            },\n            body : JSON.stringify(updatedTask)\n        })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"TASKS: \", data);\n        });\n  }\n\n  // Delete\n  function deleteTask() {\n    fetch(`http://localhost:8080/api/task/${taskList.length-1}`, {\n            method : 'DELETE',\n            headers : {\n                'content-type' : 'application/json'\n            }\n        })\n        .then((response) => response.json())\n        .then((data) => {\n          console.log(\"Deleted ID: \", data);\n        });\n  }\n\n  return (\n    <div>\n      <h1>TASK</h1>\n      <hr></hr>\n      <p>TASK Client-Server API Test</p>\n\n      <button onClick={createTask}>Create</button>\n      <button onClick={fetchTask}>Read</button>\n      <button onClick={updateTask}>Update</button>\n      <button onClick={deleteTask}>Delete</button>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}