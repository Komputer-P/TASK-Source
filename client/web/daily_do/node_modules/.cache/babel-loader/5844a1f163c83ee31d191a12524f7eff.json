{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Komputer\\\\Desktop\\\\Komputer\\\\Projects\\\\TASK\\\\client\\\\web\\\\daily_do\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport { useEffect, useState } from 'react';\nimport Footer from './components/fixed/Footer';\nimport Navigation from './components/fixed/Navigation';\nimport PreferenceWrapper from './components/PreferenceWrapper';\nimport TodayWrapper from './components/TodayWrapper';\nimport './App.css';\nimport { HashRouter, Route, Switch } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const today = new Date();\n  const dayname = ['일', '월', '화', '수', '목', '금', '토', '일'];\n\n  const todayDateHTML = /*#__PURE__*/_jsxDEV(\"p\", {\n    children: [\"\\uC624\\uB298\\uC740 \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 32\n    }, this), \" \", today.getMonth() + 1, \"\\uC6D4 \", today.getDate(), \"\\uC77C \", dayname[today.getDay()], \"\\uC694\\uC77C\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 25\n  }, this);\n\n  const [darkTheme, setDarkTheme] = useState(false); // 다크 모드\n  //const [ selectedPageNum, setSelectedPageNum ] = useState(0); // 기본값: 오늘 할 일 (0)\n\n  useEffect(() => {\n    // 랜더링 이후 다크 모드 설정 (추후 리팩토링)\n    const body = document.querySelector('body');\n    const navigation = document.querySelector('.navigation');\n    const footer = document.querySelector('.footer');\n\n    if (darkTheme) {\n      body.classList.add('dark');\n      navigation.classList.add('dark');\n      footer.classList.add('dark');\n    } else {\n      body.classList.remove('dark');\n      navigation.classList.remove('dark');\n      footer.classList.remove('dark');\n    }\n  }, [darkTheme]);\n\n  function handleThemeToggle() {\n    setDarkTheme(!darkTheme);\n  }\n\n  const [isPatched, setIsPatched] = useState(false);\n  const [userInfo, setUserInfo] = useState(\"\");\n  const idTokenLocation = document.cookie.split('; ').find(row => row.startsWith('idToken'));\n  const idToken = idTokenLocation === undefined ? window.location.replace('http://komputer-task.ml') : idTokenLocation.split('=')[1]; // Read\n\n  useEffect(() => {\n    if (!isPatched) {\n      // GET 방식으로 서버 전송\n      fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/user', {\n        method: 'POST',\n        headers: {\n          'content-type': 'application/json'\n        },\n        body: JSON.stringify(idToken)\n      }).then(response => response.json()).then(newUserInfo => {\n        console.log(\"유저 정보 가져옴: \", {\n          newUserInfo\n        });\n        setUserInfo(newUserInfo);\n      });\n      setIsPatched(true);\n    }\n  }, [isPatched, idToken]); // 메인\n\n  return /*#__PURE__*/_jsxDEV(HashRouter, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"main\",\n      children: [/*#__PURE__*/_jsxDEV(Navigation, {\n        userInfo: userInfo\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: '/',\n          exact: true,\n          render: () => /*#__PURE__*/_jsxDEV(TodayWrapper, {\n            darkTheme: darkTheme,\n            todayDateHTML: todayDateHTML\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 49\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: '/preference',\n          render: () => /*#__PURE__*/_jsxDEV(PreferenceWrapper, {\n            darkTheme: darkTheme,\n            handleThemeToggle: handleThemeToggle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 53\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Footer, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"oaQJEZjcSVHmFBHr1EGbbyrUWmc=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/src/App.js"],"names":["useEffect","useState","Footer","Navigation","PreferenceWrapper","TodayWrapper","HashRouter","Route","Switch","App","today","Date","dayname","todayDateHTML","getMonth","getDate","getDay","darkTheme","setDarkTheme","body","document","querySelector","navigation","footer","classList","add","remove","handleThemeToggle","isPatched","setIsPatched","userInfo","setUserInfo","idTokenLocation","cookie","split","find","row","startsWith","idToken","undefined","window","location","replace","fetch","method","headers","JSON","stringify","then","response","json","newUserInfo","console","log"],"mappings":"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","sourcesContent":["import { useEffect, useState } from 'react';\r\nimport Footer from './components/fixed/Footer';\r\nimport Navigation from './components/fixed/Navigation';\r\nimport PreferenceWrapper from './components/PreferenceWrapper';\r\nimport TodayWrapper from './components/TodayWrapper';\r\nimport './App.css';\r\nimport { HashRouter, Route, Switch } from 'react-router-dom';\r\n\r\nfunction App() {\r\n  const today = new Date();\r\n  const dayname = ['일','월','화','수','목','금','토','일'];       \r\n  const todayDateHTML = <p>오늘은 <br></br> {today.getMonth()+1}월 {today.getDate()}일 {dayname[today.getDay()]}요일</p>;\r\n\r\n  const [ darkTheme, setDarkTheme ] = useState(false); // 다크 모드\r\n  //const [ selectedPageNum, setSelectedPageNum ] = useState(0); // 기본값: 오늘 할 일 (0)\r\n\r\n  useEffect(() => { // 랜더링 이후 다크 모드 설정 (추후 리팩토링)\r\n    const body = document.querySelector('body');\r\n    const navigation = document.querySelector('.navigation');\r\n    const footer = document.querySelector('.footer');\r\n\r\n    if(darkTheme) {  \r\n      body.classList.add('dark');\r\n      navigation.classList.add('dark');\r\n      footer.classList.add('dark');\r\n    }\r\n    else {\r\n      body.classList.remove('dark');\r\n      navigation.classList.remove('dark');\r\n      footer.classList.remove('dark');\r\n    }\r\n  }, [ darkTheme ]);\r\n\r\n  function handleThemeToggle() {\r\n    setDarkTheme(!darkTheme);\r\n  }\r\n\r\n  const [isPatched, setIsPatched] = useState(false);\r\n  const [userInfo, setUserInfo] = useState(\"\");\r\n\r\n  const idTokenLocation = document.cookie.split('; ').find(row => row.startsWith('idToken'));\r\n  const idToken = idTokenLocation === undefined ? window.location.replace('http://komputer-task.ml') : idTokenLocation.split('=')[1];\r\n  \r\n  // Read\r\n  useEffect(() => {\r\n      if (!isPatched) {\r\n          // GET 방식으로 서버 전송\r\n          fetch('http://ec2-3-36-251-188.ap-northeast-2.compute.amazonaws.com:8080/api/user', {\r\n              method: 'POST',\r\n              headers: {\r\n                  'content-type': 'application/json'\r\n              },\r\n              body: JSON.stringify(idToken)\r\n          })\r\n              .then((response) => response.json())\r\n              .then((newUserInfo) => {\r\n                  console.log(\"유저 정보 가져옴: \", { newUserInfo });\r\n                  setUserInfo(newUserInfo);\r\n              });\r\n\r\n          setIsPatched(true);\r\n      }\r\n  }, [isPatched, idToken]);\r\n  \r\n  // 메인\r\n  return (\r\n    <HashRouter>\r\n      <div className=\"main\">\r\n        <Navigation userInfo={userInfo}></Navigation>\r\n        <Switch>\r\n          <Route path={'/'} exact render={() => <TodayWrapper darkTheme={darkTheme} todayDateHTML={todayDateHTML}/>}/>\r\n          <Route path={'/preference'} render={() => <PreferenceWrapper darkTheme={darkTheme} handleThemeToggle={handleThemeToggle}/>}/>\r\n        </Switch>\r\n        <Footer></Footer>\r\n      </div>\r\n    </HashRouter>\r\n  );\r\n}\r\n\r\nexport default App;"]},"metadata":{},"sourceType":"module"}