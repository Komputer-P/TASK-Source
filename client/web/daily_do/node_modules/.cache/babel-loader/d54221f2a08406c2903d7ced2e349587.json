{"ast":null,"code":"import'./TodoItem.css';import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var TodoItem=function TodoItem(_ref){var id=_ref.id,content=_ref.content,isDone=_ref.isDone,onRemove=_ref.onRemove,_onChange=_ref.onChange,onToggle=_ref.onToggle;return/*#__PURE__*/_jsxs(\"li\",{className:\"todo-item\",children:[/*#__PURE__*/_jsx(\"input\",{id:id,type:\"checkbox\",checked:isDone,onChange:function onChange(){onToggle(id);}}),/*#__PURE__*/_jsx(\"label\",{htmlFor:id}),/*#__PURE__*/_jsx(\"input\",{type:\"text\",className:\"todo-content \".concat(isDone?'checked':''),value:content,onChange:function onChange(e){_onChange(e,id);}}),/*#__PURE__*/_jsx(\"span\",{className:\"remove-item\",onClick:function onClick(e){e.stopPropagation();onRemove(id);},children:\"\\xD7\"})]});};export default TodoItem;","map":{"version":3,"sources":["C:/Users/Komputer/Desktop/Komputer/Projects/TASK/client/web/daily_do/src/components/todo/TodoItem.js"],"names":["TodoItem","id","content","isDone","onRemove","onChange","onToggle","e","stopPropagation"],"mappings":"AAAA,MAAO,gBAAP,C,wFAEA,GAAMA,CAAAA,QAAQ,CAAG,QAAXA,CAAAA,QAAW,MAA0D,IAAvDC,CAAAA,EAAuD,MAAvDA,EAAuD,CAAnDC,OAAmD,MAAnDA,OAAmD,CAA1CC,MAA0C,MAA1CA,MAA0C,CAAlCC,QAAkC,MAAlCA,QAAkC,CAAxBC,SAAwB,MAAxBA,QAAwB,CAAdC,QAAc,MAAdA,QAAc,CACvE,mBACI,YAAI,SAAS,CAAC,WAAd,wBACI,cAAO,EAAE,CAAEL,EAAX,CAAe,IAAI,CAAC,UAApB,CAA+B,OAAO,CAAEE,MAAxC,CAAgD,QAAQ,CAAE,mBAAM,CAAEG,QAAQ,CAACL,EAAD,CAAR,CAAc,CAAhF,EADJ,cAEI,cAAO,OAAO,CAAEA,EAAhB,EAFJ,cAGI,cAAO,IAAI,CAAC,MAAZ,CAAmB,SAAS,wBAAkBE,MAAM,CAAI,SAAJ,CAAkB,EAA1C,CAA5B,CAA6E,KAAK,CAAED,OAApF,CAA6F,QAAQ,CAAE,kBAACK,CAAD,CAAO,CAAEF,SAAQ,CAACE,CAAD,CAAIN,EAAJ,CAAR,CAAiB,CAAjI,EAHJ,cAII,aAAM,SAAS,CAAC,aAAhB,CAA8B,OAAO,CAAE,iBAACM,CAAD,CAAO,CAAEA,CAAC,CAACC,eAAF,GAAqBJ,QAAQ,CAACH,EAAD,CAAR,CAAe,CAApF,kBAJJ,GADJ,CAQH,CATD,CAWA,cAAeD,CAAAA,QAAf","sourcesContent":["import './TodoItem.css';\r\n\r\nconst TodoItem = ({ id, content, isDone, onRemove, onChange, onToggle}) => {\r\n    return (\r\n        <li className=\"todo-item\">\r\n            <input id={id} type=\"checkbox\" checked={isDone} onChange={() => { onToggle(id) }}></input>\r\n            <label htmlFor={id}></label>\r\n            <input type=\"text\" className={`todo-content ${isDone ? ('checked') : ('')}`} value={content} onChange={(e) => { onChange(e, id) }}/>\r\n            <span className=\"remove-item\" onClick={(e) => { e.stopPropagation(); onRemove(id); }}>&times;</span>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default TodoItem;"]},"metadata":{},"sourceType":"module"}