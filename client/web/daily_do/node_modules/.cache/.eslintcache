[{"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\index.js":"1","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\reportWebVitals.js":"2","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\App.js":"3","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\test\\DaydoTest.js":"4","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Todo\\TodoListTemplate.js":"5","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Todo\\TodoForm.js":"6","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Todo\\TodoItemList.js":"7","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Todo\\TodoItem.js":"8","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoListTemplate.js":"9","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoItemList.js":"10","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoForm.js":"11","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoItem.js":"12","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoSlider.js":"13","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoListTemplate.js":"14","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\todo\\TodoListTemplate.js":"15","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\todo\\TodoForm.js":"16","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoItemList.js":"17","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoForm.js":"18","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\todo\\TodoItemList.js":"19","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoSlider.js":"20","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoItem.js":"21","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\todo\\TodoItem.js":"22","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\preference\\Preference.js":"23","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\TodayWrapper.jsx":"24","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\PreferenceWrapper.jsx":"25","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\fixed\\Footer.js":"26","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\fixed\\Navigation.js":"27"},{"size":500,"mtime":1620060707196,"results":"28","hashOfConfig":"29"},{"size":362,"mtime":499162500000,"results":"30","hashOfConfig":"29"},{"size":2660,"mtime":1621494711375,"results":"31","hashOfConfig":"29"},{"size":2098,"mtime":1619697079380,"results":"32","hashOfConfig":"29"},{"size":5437,"mtime":1620037512794,"results":"33","hashOfConfig":"29"},{"size":413,"mtime":1619771003254,"results":"34","hashOfConfig":"29"},{"size":882,"mtime":1619773328391,"results":"35","hashOfConfig":"29"},{"size":614,"mtime":1619767713242,"results":"36","hashOfConfig":"29"},{"size":6103,"mtime":1620037521202,"results":"37","hashOfConfig":"29"},{"size":1025,"mtime":1619774199990,"results":"38","hashOfConfig":"29"},{"size":380,"mtime":1619772850245,"results":"39","hashOfConfig":"29"},{"size":422,"mtime":1619696473870,"results":"40","hashOfConfig":"29"},{"size":472,"mtime":1619761155438,"results":"41","hashOfConfig":"29"},{"size":6756,"mtime":1621228497866,"results":"42","hashOfConfig":"29"},{"size":6083,"mtime":1621228287050,"results":"43","hashOfConfig":"29"},{"size":413,"mtime":1619771003254,"results":"44","hashOfConfig":"29"},{"size":1025,"mtime":1619774199990,"results":"45","hashOfConfig":"29"},{"size":409,"mtime":1620042433795,"results":"46","hashOfConfig":"29"},{"size":882,"mtime":1619773328391,"results":"47","hashOfConfig":"29"},{"size":472,"mtime":1619761155438,"results":"48","hashOfConfig":"29"},{"size":422,"mtime":1619696473870,"results":"49","hashOfConfig":"29"},{"size":614,"mtime":1619767713242,"results":"50","hashOfConfig":"29"},{"size":1047,"mtime":1620981120134,"results":"51","hashOfConfig":"29"},{"size":447,"mtime":1620046787113,"results":"52","hashOfConfig":"29"},{"size":773,"mtime":1620980722573,"results":"53","hashOfConfig":"29"},{"size":214,"mtime":1620024139135,"results":"54","hashOfConfig":"29"},{"size":780,"mtime":1621494784310,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"zbmpnz",{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"63","messages":"64","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"65","usedDeprecatedRules":"66"},{"filePath":"67","messages":"68","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"78","messages":"79","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"80","messages":"81","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"82","messages":"83","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"69"},{"filePath":"86","messages":"87","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"100","messages":"101","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"102","messages":"103","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\index.js",[],["116","117"],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\reportWebVitals.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\App.js",["118"],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\test\\DaydoTest.js",["119","120"],"import { useEffect, useState } from 'react';\r\n\r\nfunction DaydoTest() {\r\n  const [ daydoList, setDaydoList ] = useState(null);\r\n  \r\n  // CREATE\r\n  function createDaydo() {\r\n    const newDaydo = {\r\n      day : 3,\r\n      content : \"wednesday todo\"\r\n    }\r\n\r\n    fetch('http://localhost:8080/api/daydo', {\r\n      method : 'POST',\r\n      headers: {\r\n        'content-type' : 'application/json'\r\n      },\r\n      body : JSON.stringify(newDaydo)\r\n    })\r\n    .then((response) => response.json())\r\n    .then((data) => {\r\n      console.log(\"Created: \", data);\r\n    })\r\n      \r\n  } \r\n  \r\n  // Read\r\n  function fetchDaydo() {\r\n    fetch('http://localhost:8080/api/daydo')\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Daydo Items: \", data);\r\n          setDaydoList(data);\r\n        });\r\n  }\r\n\r\n  // Update\r\n  function updateDaydo() {\r\n    const updatedDaydo = {\r\n        content : \"sunday todo #2\"\r\n    }\r\n\r\n    fetch(`http://localhost:8080/api/daydo/1`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(updatedDaydo)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Updated ID: \", data);\r\n        });\r\n  }\r\n\r\n  // Delete\r\n  function deleteDaydo() {\r\n    fetch(`http://localhost:8080/api/daydo/1`, {\r\n            method : 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }\r\n        })\r\n        .then((response) => response.json())\r\n        .then((data) => {\r\n          console.log(\"Deleted ID: \", data);\r\n        });\r\n  }\r\n\r\n  return (\r\n    <div>\r\n      <h1>TASK</h1>\r\n      <hr></hr>\r\n      <p>TASK-daydo Client-Server API Test</p>\r\n\r\n      <button onClick={createDaydo}>Create</button>\r\n      <button onClick={fetchDaydo}>Read</button>\r\n      <button onClick={updateDaydo}>Update</button>\r\n      <button onClick={deleteDaydo}>Delete</button>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default DaydoTest;\r\n",["121","122"],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Todo\\TodoListTemplate.js",[],["123","124"],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Todo\\TodoForm.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Todo\\TodoItemList.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Todo\\TodoItem.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoListTemplate.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoItemList.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoForm.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoItem.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\Daydo\\DaydoSlider.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoListTemplate.js",["125"],"import { useEffect, useState } from 'react'\r\nimport DaydoItemList from './DaydoItemList'\r\nimport DaydoForm from './DaydoForm'\r\nimport './DaydoListTemplate.css'\r\nimport DaydoSlider from './DaydoSlider'\r\n\r\nconst DayDoListTemplate = ({ darkTheme }) => {\r\n    const today = new Date();\r\n\r\n    const [ allDaydoItemList, setAllDaydoItemList ] = useState([]);\r\n    const [ daydoItemList, setDaydoItemList ] = useState([]);\r\n\r\n    const [ formInput, setFormInput ] = useState('');\r\n    const [ fetched, setFetched ] = useState(false);\r\n\r\n    const [ day, setDay ] = useState(today.getDay()); // 설정의 요일별 할 일 목록의 세팅되어 있는 요일 (기본 월요일 설정)\r\n\r\n    const idToken = localStorage.getItem(\"idToken\");\r\n\r\n    useEffect(() => { // 다크 모드 \r\n        console.log()\r\n        const inputs = document.querySelectorAll('input');\r\n    \r\n        if(darkTheme) {  \r\n          inputs.forEach(input => input.classList.add('dark'));\r\n        }\r\n        else {\r\n          inputs.forEach(input => input.classList.remove('dark'));\r\n        }\r\n      });\r\n      \r\n    // FETCH - POST\r\n    useEffect(() => {\r\n        // 서버로부터 모든 요일의 Daydo 목록 가져오기\r\n        if(!fetched) {\r\n            fetch('http://localhost:8080/api/daydos', {\r\n                method : 'POST',\r\n                headers : {\r\n                    'content-type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(idToken)\r\n            })\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                console.log(\"서버로부터 모든 요일별 Daydo 목록 가져옴: \", items);\r\n                setFetched(true);\r\n                setAllDaydoItemList(items);\r\n            });\r\n        }\r\n\r\n                    \r\n        // 초기로 설정되어 있는 요일에 해당하는 요일별 할 일 목록 생성\r\n        // !! Java에서 day = 1 ~ 7 : 월요일 ~ 일요일 | JavaScript에서 day = 0 ~ 6 : 일요일 ~ 토요일\r\n        const defaultDaydoItemList = allDaydoItemList.filter(daydoItem => {\r\n            if(day === 0) {\r\n                return daydoItem.day === 7;\r\n            }\r\n            else {\r\n                return daydoItem.day === day;\r\n            }\r\n        });\r\n            \r\n        setDaydoItemList(defaultDaydoItemList);\r\n    }, [fetched, allDaydoItemList, day]);\r\n\r\n    // CREATE - POST \r\n    function handleCreate() {\r\n        // Form 안의 내용을 초기화\r\n        setFormInput('');\r\n\r\n        // 서버로 보낼 객체 아이템 생성\r\n        const newDaydoItem = {\r\n            token: idToken,\r\n            content: formInput,\r\n            day: day\r\n        };\r\n        \r\n        // POST 방식으로 서버 전송\r\n        fetch('http://localhost:8080/api/daydo', {\r\n            method : 'POST',\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(newDaydoItem)\r\n        }) // 서버에서 받은 응답을 객체화 후, DaydoItemList에 추가 (컴포넌트 re-render됨)\r\n        .then((response) => response.json())\r\n        .then((newDaydoItem) => {\r\n            console.log(\"새 Todo 아이템 생성됨: \", newDaydoItem);\r\n             setDaydoItemList([...daydoItemList, newDaydoItem]);\r\n         })\r\n\r\n         // 서버에서 다시 목록 가져오기\r\n         setFetched(false);\r\n    }\r\n    \r\n    // REMOVE - DELETE\r\n    function handleRemove(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const updatedDaydoItemList = daydoItemList.filter(daydoItem => daydoItem.id !== id);\r\n\r\n        //서버\r\n        fetch(`http://localhost:8080/api/daydo/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }           \r\n        })\r\n        .then((response) => response.json())\r\n        .then((deletedId) => {\r\n            console.log(\"ID:\", deletedId, \" 삭제됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        setDaydoItemList(updatedDaydoItemList);\r\n\r\n        // 서버에서 다시 목록 가져오기\r\n        setFetched(false);\r\n    }\r\n  \r\n    // UPDATE (content) - PUT\r\n    function handleDaydoInputChange(e, id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = daydoItemList.findIndex(daydoItem => daydoItem.id === id);\r\n        const selectedItem = daydoItemList[index];\r\n        selectedItem.content = e.target.value;\r\n\r\n        // 서버\r\n        fetch(`http://localhost:8080/api/daydo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedDaydoItemList = [...daydoItemList];\r\n\r\n        updatedDaydoItemList[index] = {\r\n            ...selectedItem,\r\n        };\r\n\r\n        setDaydoItemList(updatedDaydoItemList);\r\n\r\n        // 서버에서 다시 목록 가져오기\r\n        setFetched(false);\r\n    }\r\n\r\n    function handleFormInputChange(e) {\r\n        setFormInput(e.target.value);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        if(e.key === 'Enter') {\r\n            handleCreate();\r\n        }\r\n    }\r\n\r\n    function handleSlider(e) {\r\n        if(e.target.className === 'right') {\r\n            if(day === 7) {\r\n                setDay(1);\r\n            }\r\n            else {\r\n                setDay(day+1);\r\n            }\r\n        }\r\n        else {\r\n            if(day === 1) {\r\n                setDay(7);\r\n            }\r\n            else {\r\n                setDay(day-1);\r\n            }\r\n        }\r\n    }\r\n\r\n    \r\n    return (\r\n        <div className=\"template-wrapper daydo-list-template-wrapper\">\r\n            <div className=\"daydo-title-wrapper\">\r\n                <DaydoSlider day={day} onSlide={handleSlider}></DaydoSlider>\r\n            </div>\r\n            <p></p>\r\n            <div className=\"daydo-list-wrapper\">\r\n                <DaydoItemList\r\n                    day={day}\r\n                    daydoList={daydoItemList}\r\n                    onRemove={handleRemove}\r\n                    onChange={handleDaydoInputChange}\r\n                />\r\n            </div>\r\n            <div className=\"daydo-form-wrapper\">\r\n                <DaydoForm\r\n                    value={formInput}\r\n                    onChange={handleFormInputChange}\r\n                    onCreate={handleCreate}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default DayDoListTemplate;","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\todo\\TodoListTemplate.js",["126"],"import { useEffect, useState } from 'react';\r\nimport TodoForm from './TodoForm';\r\nimport TodoItemList from './TodoItemList';\r\nimport './TodoListTemplate.css';\r\n\r\nconst TodoListTemplate = ({ darkTheme }) => {\r\n    const [ todoItemList, setTodoItemList ] = useState([]);\r\n    const [ formInput, setFormInput ] = useState('');\r\n    const [ fetched, setFetched ] = useState(false);\r\n\r\n    const idToken = localStorage.getItem(\"idToken\");\r\n\r\n    useEffect(() => { // 다크 모드 \r\n        console.log()\r\n        const inputs = document.querySelectorAll('input');\r\n    \r\n        if(darkTheme) {  \r\n          inputs.forEach(input => input.classList.add('dark'));\r\n        }\r\n        else {\r\n          inputs.forEach(input => input.classList.remove('dark'));\r\n        }\r\n    });\r\n\r\n    // FETCH - POST\r\n    useEffect(() => {\r\n        //첫 로딩시에만 서버로부터 Todo 목록 가져오기\r\n        if(!fetched) {\r\n            fetch('http://localhost:8080/api/todos', {\r\n                method : 'POST',\r\n                headers : {\r\n                    'content-type' : 'application/json'\r\n                },\r\n                body : JSON.stringify(idToken)\r\n            })\r\n            .then((response) => response.json())\r\n            .then((items) => {\r\n                console.log(\"서버로부터 Todo 목록 가져옴: \", items);\r\n                setTodoItemList(items);\r\n                setFetched(true);\r\n            });\r\n        }\r\n    }, [fetched]);\r\n\r\n    // CREATE - POST \r\n    function handleCreate() {\r\n        // Form 안의 내용을 초기화\r\n        setFormInput('');\r\n\r\n        // 서버로 보낼 객체 아이템 생성\r\n        const newTodoItem = {\r\n            token: idToken,\r\n            content: formInput,\r\n            isDone: false\r\n        };\r\n        \r\n        // POST 방식으로 서버 전송\r\n        fetch('http://localhost:8080/api/todo', {\r\n            method : 'POST',\r\n            headers: {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(newTodoItem)\r\n        }) // 서버에서 받은 응답을 객체화 후, TodoItemList에 추가 (컴포넌트 re-render됨)\r\n        .then((response) => response.json())\r\n        .then((newTodoItem) => {\r\n            console.log(\"새 Todo 아이템 생성됨: \", newTodoItem);\r\n             setTodoItemList([...todoItemList, newTodoItem]);\r\n         })\r\n    }\r\n    \r\n    // REMOVE - DELETE\r\n    function handleRemove(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const updatedTodoItemList = todoItemList.filter(todoItem => todoItem.id !== id);\r\n\r\n        //서버\r\n        fetch(`http://localhost:8080/api/todo/${id}`, {\r\n            method: 'DELETE',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            }           \r\n        })\r\n        .then((response) => response.json())\r\n        .then((deletedId) => {\r\n            console.log(\"ID:\", deletedId, \" 삭제됨\");\r\n        });\r\n\r\n        //클라이언트\r\n        setTodoItemList(updatedTodoItemList);\r\n    }\r\n  \r\n    // UPDATE (content) - PUT\r\n    function handleTodoInputChange(e, id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = todoItemList.findIndex(todoItem => todoItem.id === id);\r\n        const selectedItem = todoItemList[index];\r\n        selectedItem.content = e.target.value;\r\n\r\n        // 서버\r\n        fetch(`http://localhost:8080/api/todo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedTodoItemList = [...todoItemList];\r\n\r\n        updatedTodoItemList[index] = {\r\n            ...selectedItem,\r\n        };\r\n\r\n        setTodoItemList(updatedTodoItemList);\r\n    }\r\n    \r\n    // UPDATE (isDone) - PUT\r\n    function handleToggle(id) {\r\n        // 서버와 클라이언트 따로따로 처리됨\r\n        const index = todoItemList.findIndex(todoItem => todoItem.id === id);\r\n        const selectedItem = todoItemList[index];\r\n        selectedItem.isDone = !selectedItem.isDone;\r\n\r\n        // 서버\r\n        fetch(`http://localhost:8080/api/todo/${id}`, {\r\n            method : 'PUT',\r\n            headers : {\r\n                'content-type' : 'application/json'\r\n            },\r\n            body : JSON.stringify(selectedItem)\r\n        })\r\n        .then((response) => response.json())\r\n        .then((updatedId) => {\r\n            console.log(\"ID:\", updatedId, \" 업데이트됨\");\r\n        });\r\n\r\n        // 클라이언트\r\n        const updatedTodoItemList = [...todoItemList];\r\n\r\n        updatedTodoItemList[index] = {\r\n            ...selectedItem\r\n        };\r\n\r\n        setTodoItemList(updatedTodoItemList);       \r\n    }\r\n\r\n    function handleFormInputChange(e) {\r\n        setFormInput(e.target.value);\r\n    }\r\n\r\n    function handleKeyPress(e) {\r\n        if(e.key === 'Enter') {\r\n            handleCreate();\r\n        }\r\n    }\r\n  \r\n\r\n    return (\r\n        <div className=\"template-wrapper todo-list-template-wrapper\">\r\n            <div className=\"todo-title\">\r\n                <h2>목록</h2>\r\n                <p></p>\r\n            </div>\r\n            <div className=\"todo-lists-wrapper\">\r\n                <TodoItemList\r\n                    todoList={todoItemList}\r\n                    onRemove={handleRemove}\r\n                    onChange={handleTodoInputChange}\r\n                    onToggle={handleToggle}\r\n                />\r\n            </div>\r\n            <div className=\"todo-form-wrapper\">\r\n                <TodoForm\r\n                    value={formInput}\r\n                    onChange={handleFormInputChange}\r\n                    onCreate={handleCreate}\r\n                    onKeyPress={handleKeyPress}\r\n                />\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default TodoListTemplate;","C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\todo\\TodoForm.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoItemList.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoForm.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\todo\\TodoItemList.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoSlider.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\daydo\\DaydoItem.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\todo\\TodoItem.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\preference\\Preference.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\TodayWrapper.jsx",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\PreferenceWrapper.jsx",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\fixed\\Footer.js",[],"C:\\Users\\Komputer\\Desktop\\Komputer\\Projects\\TASK\\client\\web\\daily_do\\src\\components\\fixed\\Navigation.js",[],{"ruleId":"127","replacedBy":"128"},{"ruleId":"129","replacedBy":"130"},{"ruleId":"131","severity":1,"message":"132","line":61,"column":6,"nodeType":"133","endLine":61,"endColumn":17,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":1,"column":10,"nodeType":"137","messageId":"138","endLine":1,"endColumn":19},{"ruleId":"135","severity":1,"message":"139","line":4,"column":11,"nodeType":"137","messageId":"138","endLine":4,"endColumn":20},{"ruleId":"127","replacedBy":"140"},{"ruleId":"129","replacedBy":"141"},{"ruleId":"127","replacedBy":"142"},{"ruleId":"129","replacedBy":"143"},{"ruleId":"131","severity":1,"message":"132","line":64,"column":8,"nodeType":"133","endLine":64,"endColumn":40,"suggestions":"144"},{"ruleId":"131","severity":1,"message":"132","line":43,"column":8,"nodeType":"133","endLine":43,"endColumn":17,"suggestions":"145"},"no-native-reassign",["146"],"no-negated-in-lhs",["147"],"react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'idToken'. Either include it or remove the dependency array.","ArrayExpression",["148"],"no-unused-vars","'useEffect' is defined but never used.","Identifier","unusedVar","'daydoList' is assigned a value but never used.",["146"],["147"],["146"],["147"],["149"],["150"],"no-global-assign","no-unsafe-negation",{"desc":"151","fix":"152"},{"desc":"153","fix":"154"},{"desc":"155","fix":"156"},"Update the dependencies array to be: [idToken, isPatched]",{"range":"157","text":"158"},"Update the dependencies array to be: [fetched, allDaydoItemList, day, idToken]",{"range":"159","text":"160"},"Update the dependencies array to be: [fetched, idToken]",{"range":"161","text":"162"},[2042,2053],"[idToken, isPatched]",[2137,2169],"[fetched, allDaydoItemList, day, idToken]",[1387,1396],"[fetched, idToken]"]